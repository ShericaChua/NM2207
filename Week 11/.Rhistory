# Load the required packages
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics and the corresponding weeks
topics <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses",
"Building interactive web applications with Shiny",
"Customizing ggplot2 plots",
"Building responsive web applications"
)
weeks <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, "", "", "")
df <- data.frame(Topic = topics, Week = weeks)
# Create the table using kable
kable(df, format = "markdown")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics and the corresponding weeks
TAUGHT <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses",
)
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics and the corresponding weeks
TAUGHT <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses",
)
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics and the corresponding weeks
TAUGHT <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses"
)
SELF-LEARNED <- C(
"Building interactive web applications with Shiny",
"Customizing ggplot2 plots",
"Building responsive web applications"
)
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics and the corresponding weeks
TAUGHT <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses"
)
WEEKS <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
df <- data.frame(TAUGHT = TAUGHT, WEEKS = WEEKS)
# Create the table using kable
kable(df, format = "markdown")
# Enter code here
# Load the required packages
library(knitr)
# Create a data frame with the topics, weeks, and learning type
topics <- c(
"Introduce to Radiant",
"Data & Visualization",
"Variables & its types",
"Manipulating data",
"Functions",
"Iterations Vs. Vectorized codes",
"Visualizing data",
"Introduction to Shiny",
"Exploratory data analyses",
"Start up responsive web applications with diary entry",
"Building interactive web applications with Shiny",
"Customizing ggplot2 plots"
)
weeks <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, "", "", "")
learning_type <- c("Taught", "Taught", "Taught", "Taught", "Taught", "Taught", "Taught", "Taught", "Taught", "Self-learned", "Self-learned", "Self-learned")
df <- data.frame(Topic = topics, Week = weeks, Learning_Type = learning_type)
# Create the table using kable
kable(df, format = "markdown")
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(tidyverse)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=bd0bac51ecbe49e5b9ef03994a98fa36"
raw_data <- GET(historic_state_data_url)
glimpse(data)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=bd0bac51ecbe49e5b9ef03994a98fa36"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
glimpse(data)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(tidyverse)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=bd0bac51ecbe49e5b9ef03994a98fa36"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
time_series <- data %>%
unnest(actualsTimeseries
time_series <- data %>%
unnest(actualsTimeseries)
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="C
A")]]$date)
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <-time_series$cdcTransmissionLevelTimeseries[[which(data$s
tate=="DC")]]$cdcTransmissionLevel
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia<-time_series$cdcTransmissionLevelTimeseries[[which(data$s
tate=="DC")]]$cdcTransmissionLevel
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <-time_series$cdcTransmissionLevelTimeseries[[which(data$s
tate=="DC")]]$cdcTransmissionLevel
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <-time_series$cdcTransmissionLevelTimeseries[[which(data$state=="DC")]]$cdcTransmissionLevel
print(head(time_series_transmission))
# New data-frame with dates
time_series_cases <- list(Alaska = time_series %>% filter(state=="AK") %>% select(date,cases))
# Cases of each state
time_series_cases$California <- time_series %>% filter(state=="CA") %>% select(date,cases)
time_series_cases$New_Jersey <- time_series %>% filter(state=="NJ") %>% select(date,cases)
time_series_cases$Tennessee <- time_series %>% filter(state=="TN") %>% select(date,cases)
time_series_cases$District_of_Columbia <- time_series %>% filter(state=="DC") %>% select(date,cases)
# New data-frame with dates
time_series_cases <- list(Alaska = time_series %>% filter(state=="AK") %>% select(date,cases))
# Cases of each state
time_series_cases$California <- time_series %>% filter(state=="CA") %>% select(date,cases)
time_series_cases$New_Jersey <- time_series %>% filter(state=="NJ") %>% select(date,cases)
time_series_cases$Tennessee <- time_series %>% filter(state=="TN") %>% select(date,cases)
time_series_cases$District_of_Columbia <- time_series %>% filter(state=="DC") %>% select(date,cases)
ggplot(data, aes(x=state,y=population)) + geom_bar(stat="identity") +labs(x="States",y="Population") + th
ggplot(data, aes(x=state,y=population)) +geom_bar(stat="identity") +labs(x="States",y="Population") +theme_bw()
ggplot(data, aes(x=state,y=(data$actuals$cases/population))) + geom_bar(stat="identity") + labs(x="State
s",y="Infected (%)")+theme_bw()
time_series_transmission[seq(1,1300,by=100),]%>%
pivot_longer(cols=Alaska:District_of_Columbia,names_to="Countries",values_to="Transmission") %>%
ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +
geom_point(show.legend=TRUE) + labs(x="Date",y="Transmission Level")+theme_bw()
data_to_plot <- tibble(Date_Alaska =time_series_cases$Alaska$date[seq(1,1300,by=100)],Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],Date_California = time_series_cases$California$date[seq(1,1300,by=100)],Cases_California =time_series_cases$California$cases[seq(1,1300,by=100)],Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],Cases_New_Jersey =time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=10)],Cases_Tennessee =time_series_cases$Tennessee$cases[seq(1,1300,by=100)],Date_District_of_Columbia =time_series_cases$District_of_Columbia$date[seq(1,130
0,by=100)],Cases_District_of_Columbia =time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
library(cowplot)
library(cowplot)
install.packages("cowplot")
library(cowplot)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() + labs(x="Date",y="Cases", title="Alaska") + theme_bw()
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() + labs(x="Date",y="Cases", title="California") + theme_bw()
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() + labs(x="Date",y="Cases", title="New Jersey") + theme_bw()
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() + labs(x="Date",y="Cases", title="Tennessee") + theme_bw()
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() + labs(x="Date",y="Cases", title="District of Columbia") + theme_bw()
plot_grid(fig1 + theme(legend.justification = c(0,1)),
fig2 + theme(legend.justification = c(1,0)),
fig3 + theme(legend.justification = c(0,1)),
fig4 + theme(legend.justification = c(1,0)),
fig5 + theme(legend.justification = c(0,1)),
align = "v", axis = "lr", nrow=3,
ncol = 2,labels = LETTERS[1:5],
rel_heights = c(1,2))
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() + labs(x="Date",y="Cases", title="Alaska") + theme_bw()
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() + labs(x="Date",y="Cases", title="California") + theme_bw()
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() + labs(x="Date",y="Cases", title="New Jersey") + theme_bw()
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() + labs(x="Date",y="Cases", title="Tennessee") + theme_bw()
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() + labs(x="Date",y="Cases", title="District of Columbia") + theme_bw()
plot_grid(fig1 + theme(legend.justification = c(0,1)),
fig2 + theme(legend.justification = c(1,0)),
fig3 + theme(legend.justification = c(0,1)),
fig4 + theme(legend.justification = c(1,0)),
fig5 + theme(legend.justification = c(0,1)),
align = "v", axis = "lr", nrow=3,
ncol = 2,labels = LETTERS[1:5],
rel_heights = c(1,2))
knitr::opts_chunk$set(echo = TRUE)
out.height= "500px",out.width= "500px",echo= FALSE,eval=TRUE,fig.cap="Graph 1"} knitr::include_graphics("graph")
out.height= "500px",out.width="500px",fig.cap="Graph 1"} knitr::include_graphics("graph")
out.height= "500px"",fig.cap="Graph 1"} knitr::include_graphics("graph")
out.height= "500px",out.width="500px",fig.cap="Graph 1"} knitr::include_graphics("graph")
out.height= "500px" out.width="500px",fig.cap="Graph 1"} knitr::include_graphics("graph")
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=bd0bac51ecbe49e5b9ef03994a98fa36"
raw_data <- GET(historic_state_data_url)
